#define LCD_X     84
#define LCD_Y     48

// Pin definitions
#define PIN_RESET 8
#define PIN_SCE   5
#define PIN_DC    4
#define PIN_SDIN  7
#define PIN_SCLK  6

#define BUTTON_UP 16
#define BUTTON_DOWN 17
#define BUTTON_SELECT 18

// LCD Command/Data Mode
#define LCD_C 0  // Command
#define LCD_D 1  // Data

// Bitmap images (84x48 pixel example images; replace these with actual image data)
const char image1[] = { 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x1f, 0x3f, 0xff, 0x01, 0xf1, 0x71, 0x23, 0x07, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xe3, 0xf0, 0xfc, 0x00, 0xf9, 0xf0, 0x62, 0x07, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x6d, 0x13, 0xff, 0x83, 0xbc, 0xbd, 0xbc, 0xfe, 0x83, 0xab, 0xab, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};


const char image2[] ={ 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x3f, 0x1f, 0xe7, 0xfb, 0x9b, 0x9d, 0xfd, 0xfd, 0xfb, 0xfb, 0xe7, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8e, 0x76, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xf4, 0xef, 0xef, 0xef, 0xf7, 0xfb, 0x7d, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfd, 0x81, 0xed, 0x81, 0xfd, 0x89, 0xfd, 0x81, 0xb9, 0xb9, 0xc5, 0xfd, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};


const char image3[] = { 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xdf, 0x6f, 0xb7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xb7, 0x6f, 0xdf, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0x67, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x63, 0xe3, 0xe7, 0xfe, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0x80, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};

const char image4[] ={ 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0xfe, 0xfe, 0xfe, 0x1e, 0xee, 0x36, 0xda, 0x6e, 0xbe, 0x7e, 0xbe, 0x6e, 0xda, 0x36, 0xee, 0x1e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xfe, 0xfd, 0xfa, 0xf5, 0xfa, 0xfd, 0x02, 0xfd, 0xfa, 0xf5, 0xfa, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xb3, 0xed, 0xed, 0x9b, 0xff, 0x87, 0xff, 0xff, 0x87, 0xff, 0x81, 0xf5, 0xb5, 0xcb, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};

const char image5[] ={ 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x0e, 0xf6, 0x3a, 0xde, 0x6e, 0xbe, 0x5e, 0x3e, 0x3e, 0x3e, 0x5e, 0xbe, 0x6e, 0xde, 0x3a, 0xf6, 0x0e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xef, 0xd8, 0xf7, 0xec, 0xfb, 0xf4, 0xf8, 0xf8, 0xf8, 0xf4, 0xeb, 0xf4, 0xbb, 0xdc, 0xef, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xfb, 0xf7, 0xef, 0xdf, 0xbf, 0x80, 0xff, 0x80, 0xfa, 0xfa, 0xff, 0xc1, 0x9e, 0xbe, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};

const char image6[] = { 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0xfe, 0x9e, 0xce, 0xe6, 0x66, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x66, 0xe6, 0xe6, 0xce, 0x9e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0xff, 0xe7, 0xf3, 0x93, 0x93, 0xf3, 0xe7, 0xfe, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xdf, 0xc1, 0xdf, 0xc1, 0xff, 0xc5, 0xff, 0xc0, 0xfa, 0xfa, 0xff, 0xc5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00
};




const char image7[] = { 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0x1f, 0x3f, 0xff, 0x01, 0xf1, 0x71, 0x23, 0x07, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xe3, 0xf0, 0xfc, 0x00, 0xf9, 0xf0, 0x62, 0x07, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x6d, 0x13, 0xff, 0x83, 0xbc, 0xbd, 0xbc, 0xfe, 0x83, 0xab, 0xab, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};


const char image8[] = { 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x81, 0x41, 0x21, 0x91, 0x49, 0x29, 0x29, 0x29, 0x29, 0x29, 0x29, 0x49, 0x91, 0x21, 0x41, 0x81, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x98, 0x1c, 0x1c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x18, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x80, 0x80, 0xff, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 
  0xfe, 0xfe, 0xfe, 0xfe, 0x1e, 0xee, 0x36, 0xda, 0x6e, 0xbe, 0x7e, 0xbe, 0x6e, 0xda, 0x36, 0xee, 0x1e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xfe, 0xfd, 0xfa, 0xf5, 0xfa, 0xfd, 0x02, 0xfd, 0xfa, 0xf5, 0xfa, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xb3, 0xed, 0xed, 0x9b, 0xff, 0x87, 0xff, 0xff, 0x87, 0xff, 0x81, 0xf5, 0xb5, 0xcb, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};

const char image9[] = { 
  0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x61, 0xe1, 0xc1, 0x01, 0xff, 0x07, 0x8f, 0xdd, 0xf9, 0x61, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0xc1, 0xc1, 0xe1, 0x19, 0x05, 0x65, 0x63, 0x03, 0x03, 0x05, 0x05, 0x19, 0xe1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0x7f, 0xbf, 0xdf, 0x6f, 0xb7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xd7, 0xb7, 0x6f, 0xdf, 0xbf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1c, 0x0f, 0x03, 0xff, 0x06, 0x0f, 0x9d, 0xf8, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x89, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0b, 0x10, 0x10, 0x10, 0x08, 0x04, 0x82, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0x67, 0xe3, 0xe3, 0xe3, 0xe3, 0xe3, 0x63, 0xe3, 0xe7, 0xfe, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0x80, 0xfe, 0x92, 0xec, 0x80, 0xfc, 0xc3, 0xc2, 0xc3, 0x81, 0xfc, 0xd4, 0xd4, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x82, 0xfe, 0x92, 0xfe, 0x82, 0xf6, 0x82, 0xfe, 0xc6, 0xca, 0xf2, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0x80, 0xfd, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 
  0xfe, 0x02, 0x02, 0x02, 0xe2, 0x12, 0xca, 0x26, 0x92, 0x42, 0x82, 0x42, 0x92, 0x26, 0xca, 0x12, 0xe2, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0xf2, 0x0a, 0xc6, 0x22, 0x92, 0x42, 0xa2, 0xc2, 0xc2, 0xc2, 0xa2, 0x42, 0x92, 0x22, 0xc6, 0x0a, 0xf2, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 0x00, 0xfe, 0x02, 0x62, 0x32, 0x1a, 0x9a, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0xda, 0x9a, 0x1a, 0x1a, 0x32, 0x62, 0x02, 0x02, 0x02, 0x02, 0x02, 0xfe, 0xfc, 0x00, 
  0xff, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0a, 0x05, 0x02, 0xfd, 0x02, 0x05, 0x0a, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x27, 0x08, 0x13, 0x04, 0x0b, 0x07, 0x07, 0x07, 0x0b, 0x14, 0x0b, 0x44, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x18, 0x0c, 0x6c, 0x6c, 0x0c, 0x18, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0xff, 0x80, 0x80, 0x80, 0xcc, 0x92, 0x92, 0xe4, 0x80, 0xf8, 0x80, 0x80, 0xf8, 0x80, 0xfe, 0x8a, 0xca, 0xb4, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x84, 0x88, 0x90, 0xa0, 0xc0, 0xff, 0x80, 0xff, 0x85, 0x85, 0x80, 0xbe, 0xe1, 0xc1, 0xc1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00, 0x00, 0xff, 0x80, 0x80, 0x80, 0xbe, 0xa0, 0xbe, 0xa0, 0xbe, 0x80, 0xba, 0x80, 0xbf, 0x85, 0x85, 0x80, 0xba, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff, 0x7f, 0x00
};



// Array of images
const char* images[] = {image1, image2, image3 , image4, image5, image6, image7, image8, image9};
int totalImages = sizeof(images) / sizeof(images[0]);
int currentImage = 0;

void setup() {
  // Initialize display and buttons
  LcdInitialise();
  LcdClear();
  
  pinMode(BUTTON_UP, INPUT_PULLDOWN);
  pinMode(BUTTON_DOWN, INPUT_PULLDOWN);
  pinMode(BUTTON_SELECT, INPUT_PULLDOWN);

  // Display the first image
  displayImage(currentImage);
}

void loop() {
  // Check if the UP button is pressed
  if (digitalRead(BUTTON_UP) == HIGH) {
    currentImage = (currentImage - 1 + totalImages) % totalImages;  // Previous image
    displayImage(currentImage);
    delay(200);  // Debounce delay
  }

  // Check if the DOWN button is pressed
  if (digitalRead(BUTTON_DOWN) == HIGH) {
    currentImage = (currentImage + 1) % totalImages;  // Next image
    displayImage(currentImage);
    delay(200);  // Debounce delay
  }

  // Check if the SELECT button is pressed
  if (digitalRead(BUTTON_SELECT) == HIGH) {
    // Optional: Add functionality for SELECT button

    Serial.print("Selected image: ");
    Serial.println(currentImage);
    delay(200);  // Debounce delay
  }
}

// Display the specified image
void displayImage(int index) {
  LcdClear();
  gotoXY(0, 0);           // Ensure image starts from the top-left corner
  LcdBitmap(images[index]);
}

// LCD Procedures  
void LcdClear(void) {
  for (int index = 0; index < LCD_X * LCD_Y / 8; index++) {
    LcdWrite(LCD_D, 0x00);
  }
}

void LcdInitialise(void) {
  pinMode(PIN_SCE, OUTPUT);
  pinMode(PIN_RESET, OUTPUT);
  pinMode(PIN_DC, OUTPUT);
  pinMode(PIN_SDIN, OUTPUT);
  pinMode(PIN_SCLK, OUTPUT);
  digitalWrite(PIN_RESET, LOW);
  digitalWrite(PIN_RESET, HIGH);

  LcdWrite(LCD_C, 0x21);  // LCD Extended Commands
  LcdWrite(LCD_C, 0xB1);  // Set LCD Vop (Contrast)
  LcdWrite(LCD_C, 0x04);  // Set Temp coefficient
  LcdWrite(LCD_C, 0x14);  // LCD bias mode 1:48
  LcdWrite(LCD_C, 0x0C);  // LCD in normal mode
  LcdWrite(LCD_C, 0x20);
  LcdWrite(LCD_C, 0x0C);
}

void gotoXY(int x, int y) {
  LcdWrite(LCD_C, 0x80 | x);  // Column
  LcdWrite(LCD_C, 0x40 | y);  // Row
}

void LcdWrite(byte dc, byte data) {
  digitalWrite(PIN_DC, dc);
  digitalWrite(PIN_SCE, LOW);
  shiftOut(PIN_SDIN, PIN_SCLK, MSBFIRST, data);
  digitalWrite(PIN_SCE, HIGH);
}

void LcdBitmap(const char my_array[]) {
  for (int index = 0; index < (LCD_X * LCD_Y / 8); index++) {
    LcdWrite(LCD_D, my_array[index]);
  }
}
