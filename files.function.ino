#include <SPI.h>
#include <SD.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>

// HSPI Configuration for SD Card
#define HSPI_CLK   14
#define HSPI_MISO  12  
#define HSPI_MOSI  13 
#define HSPI_CS    27 
SPIClass hspi(HSPI);

#define LCD_C     LOW
#define LCD_D     HIGH

#define LCD_X     84
#define LCD_Y     48


// Nokia 5110 display pins
#define RST 2
#define CE  15
#define DC  22
#define DIN 23
#define CLK 18

// Button pins
#define BTN_UP    32 
#define BTN_DOWN  26
#define BTN_SELECT 25
#define BTN_BACK   33


char nofiles [] ={ 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x10, 0x08, 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xf0, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0xe8, 0xf4, 0xf4, 0x94, 0xb4, 0xe8, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x40, 0x41, 0x46, 0x38, 0x20, 0x20, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x1c, 0x38, 0x70, 0xe0, 0xc0, 0x80, 0xc0, 0xe0, 0x70, 0x38, 0x1c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x0b, 0x0b, 0x0b, 0x0b, 0x05, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x40, 0x40, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x82, 0x41, 0x21, 0x11, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x70, 0x38, 0x1c, 0x0e, 0x07, 0x03, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x18, 0x18, 0x1c, 0xfc, 0x02, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
char nosd1 [] ={ 
  0xfe, 0xff, 0x01, 0xe1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0xc1, 0x21, 0x21, 0x21, 0xc1, 0x01, 0x61, 0x91, 0x91, 0x91, 0x21, 0x01, 0xf1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0x81, 0x01, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x8f, 0x80, 0x80, 0x80, 0x8f, 0x80, 0x87, 0x88, 0x88, 0x88, 0x87, 0x80, 0x84, 0x88, 0x88, 0x88, 0x87, 0x80, 0x8f, 0x88, 0x88, 0x88, 0x87, 0x80, 0x80, 0x80, 0x80, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xb9, 0x80, 0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x70, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x18, 
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfe, 0xbf, 0xe1, 0xc0, 0x40, 0xe1, 0xff, 0xbf, 0xef, 0x3e, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x0f, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x05, 0x05, 0x0b, 0x8a, 0x4b, 0x29, 0x85, 0x44, 0x23, 0x90, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1c, 0x22, 0x22, 0xc2, 0x42, 0x42, 0x42, 0x44, 0x44, 0xf8, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x30, 0x40, 0x40, 0x40, 0x40, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0xc0, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x10, 0x10, 0x90, 0x88, 0x88, 0xc8, 0xc8, 0xc4, 0xe4, 0x22, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3c, 0x04, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x02, 0xc2, 0x3e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f, 0x0f, 0x0f, 0x07, 0x07, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
char nosd2 [] ={ 
  0xfe, 0xff, 0x01, 0xe1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0xc1, 0x21, 0x21, 0x21, 0xc1, 0x01, 0x61, 0x91, 0x91, 0x91, 0x21, 0x01, 0xf1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0x81, 0x01, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x8f, 0x80, 0x80, 0x80, 0x8f, 0x80, 0x87, 0x88, 0x88, 0x88, 0x87, 0x80, 0x84, 0x88, 0x88, 0x88, 0x87, 0x80, 0x8f, 0x88, 0x88, 0x88, 0x87, 0x80, 0x80, 0x80, 0x80, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xb9, 0x80, 0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x70, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x18, 
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfe, 0xbf, 0xe1, 0xc0, 0x40, 0xe1, 0xff, 0xbf, 0xef, 0x3e, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x0f, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x05, 0x05, 0x0b, 0x8a, 0x4b, 0x29, 0x85, 0x44, 0x23, 0x90, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x44, 0x44, 0x84, 0x84, 0x84, 0x84, 0x88, 0x88, 0xf0, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x60, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0xc0, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x10, 0x10, 0x90, 0x88, 0x88, 0xc8, 0xc8, 0xc4, 0xe4, 0x22, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xfe, 0x78, 0x08, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x05, 0x05, 0x06, 0xc6, 0x3e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f, 0x0f, 0x0f, 0x07, 0x07, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
char nosd3 [] = { 
  0xfe, 0xff, 0x01, 0xe1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0xc1, 0x21, 0x21, 0x21, 0xc1, 0x01, 0x61, 0x91, 0x91, 0x91, 0x21, 0x01, 0xf1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0x81, 0x01, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x8f, 0x80, 0x80, 0x80, 0x8f, 0x80, 0x87, 0x88, 0x88, 0x88, 0x87, 0x80, 0x84, 0x88, 0x88, 0x88, 0x87, 0x80, 0x8f, 0x88, 0x88, 0x88, 0x87, 0x80, 0x80, 0x80, 0x80, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xb9, 0x80, 0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x70, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x18, 
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0xb8, 0xec, 0xc4, 0x44, 0x64, 0xfc, 0xfc, 0xbc, 0x68, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x0f, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x43, 0x23, 0x83, 0x42, 0x22, 0x93, 0x4b, 0x22, 0x91, 0x48, 0x20, 0x90, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0xc0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0x40, 0xa0, 0xe0, 0xe0, 0xc0, 0x40, 0x40, 0x40, 0xc0, 0xe0, 0xe0, 0xe0, 0x70, 0x30, 0x30, 0x18, 0x18, 0x08, 0x08, 0x84, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf9, 0x06, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0xf8, 0xe0, 0x20, 0x20, 0x18, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x10, 0x17, 0x19, 0x11, 0xd1, 0x31, 0x71, 0x71, 0x71, 0x70, 0x78, 0x38, 0x3c, 0x1c, 0x1e, 0x0e, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
char nosd4 [] ={ 
  0xfe, 0xff, 0x01, 0xe1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0xc1, 0x21, 0x21, 0x21, 0xc1, 0x01, 0x61, 0x91, 0x91, 0x91, 0x21, 0x01, 0xf1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0x81, 0x01, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x8f, 0x80, 0x80, 0x80, 0x8f, 0x80, 0x87, 0x88, 0x88, 0x88, 0x87, 0x80, 0x84, 0x88, 0x88, 0x88, 0x87, 0x80, 0x8f, 0x88, 0x88, 0x88, 0x87, 0x80, 0x80, 0x80, 0x80, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xb9, 0x80, 0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x70, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x18, 
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0xb8, 0xec, 0xc4, 0x44, 0x64, 0xfc, 0xfc, 0xbc, 0x68, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x0f, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x43, 0x23, 0x83, 0x42, 0x22, 0x93, 0x4b, 0x22, 0x91, 0x48, 0x20, 0x90, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0xc0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0xc0, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x10, 0x10, 0x90, 0x88, 0x88, 0xc8, 0xc8, 0xc4, 0xe4, 0x22, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf9, 0x06, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0xf8, 0xe0, 0x20, 0x20, 0x18, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x10, 0x11, 0x11, 0x12, 0xd2, 0x3e, 0x1e, 0x1e, 0x1e, 0x0e, 0x0e, 0x0f, 0x0f, 0x0f, 0x07, 0x07, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
char nosd5 [] ={ 
  0xfe, 0xff, 0x01, 0xe1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0xc1, 0x21, 0x21, 0x21, 0xc1, 0x01, 0x61, 0x91, 0x91, 0x91, 0x21, 0x01, 0xf1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0x81, 0x01, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x8f, 0x80, 0x80, 0x80, 0x8f, 0x80, 0x87, 0x88, 0x88, 0x88, 0x87, 0x80, 0x84, 0x88, 0x88, 0x88, 0x87, 0x80, 0x8f, 0x88, 0x88, 0x88, 0x87, 0x80, 0x80, 0x80, 0x80, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xb9, 0x80, 0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x70, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x18, 
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xc0, 0xe0, 0xf0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x0f, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x43, 0x23, 0x83, 0x43, 0x23, 0x93, 0x4b, 0x21, 0x90, 0x48, 0x20, 0x90, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0xc0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0x40, 0xa0, 0xe0, 0xe0, 0xc0, 0x40, 0x40, 0x40, 0xc0, 0xe0, 0xe0, 0xe0, 0x70, 0x30, 0x30, 0x18, 0x18, 0x08, 0x08, 0x84, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf9, 0x06, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0xf8, 0xe0, 0x20, 0x20, 0x18, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x10, 0x17, 0x19, 0x11, 0xd1, 0x31, 0x71, 0x71, 0x71, 0x70, 0x78, 0x38, 0x3c, 0x1c, 0x1e, 0x0e, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
char nosd6 [] ={ 
  0xfe, 0xff, 0x01, 0xe1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0xc1, 0x21, 0x21, 0x21, 0xc1, 0x01, 0x61, 0x91, 0x91, 0x91, 0x21, 0x01, 0xf1, 0x11, 0x11, 0x11, 0xe1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0xc9, 0xf9, 0x81, 0x01, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x8f, 0x80, 0x80, 0x80, 0x8f, 0x80, 0x87, 0x88, 0x88, 0x88, 0x87, 0x80, 0x84, 0x88, 0x88, 0x88, 0x87, 0x80, 0x8f, 0x88, 0x88, 0x88, 0x87, 0x80, 0x80, 0x80, 0x80, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0xb9, 0x80, 0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x70, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x18, 
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xfe, 0xbf, 0xe1, 0xc0, 0x40, 0xe1, 0xff, 0xbf, 0xef, 0x3e, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x10, 0x0f, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x05, 0x05, 0x0b, 0x8a, 0x4b, 0x29, 0x85, 0x44, 0x23, 0x90, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0xc0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x41, 0x40, 0xa0, 0xe0, 0xe0, 0xc0, 0x40, 0x40, 0x40, 0xc0, 0xe0, 0xe0, 0xe0, 0x70, 0x30, 0x30, 0x18, 0x18, 0x08, 0x08, 0x84, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf9, 0x06, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0xf8, 0xe0, 0x20, 0x20, 0x18, 0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x10, 0x17, 0x19, 0x11, 0xd1, 0x31, 0x71, 0x71, 0x71, 0x70, 0x78, 0x38, 0x3c, 0x1c, 0x1e, 0x0e, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void LcdClear(void)
{
  for (int index = 0; index < LCD_X * LCD_Y / 8; index++)
  {
    LcdWrite(LCD_D, 0x00);
  }
}
void LcdInitialise(void)
{
  pinMode(CE, OUTPUT);
  pinMode(RST, OUTPUT);
  pinMode(DC, OUTPUT);
  pinMode(DIN, OUTPUT);
  pinMode(CLK, OUTPUT);
  digitalWrite(RST, LOW);
  digitalWrite(RST, HIGH);
  LcdWrite(LCD_C, 0x21 );  // LCD Extended Commands.
  LcdWrite(LCD_C, 0xB1 );  // Set LCD Vop (Contrast). 
  LcdWrite(LCD_C, 0x04 );  // Set Temp coefficent. //0x04
  LcdWrite(LCD_C, 0x14 );  // LCD bias mode 1:48. //0x13
  LcdWrite(LCD_C, 0x0C );  // LCD in normal mode.
  LcdWrite(LCD_C, 0x20 );
  LcdWrite(LCD_C, 0x0C );
}

void gotoXY(int x, int y)
{
  LcdWrite( 0, 0x80 | x);  // Column.
  LcdWrite( 0, 0x40 | y);  // Row. 

}
void LcdWrite(byte dc, byte data)
{
  digitalWrite(DC, dc);
  digitalWrite(CE, LOW);
  shiftOut(DIN, CLK, MSBFIRST, data);
  digitalWrite(CE, HIGH);
}

void LcdBitmap(char my_array[]){
  for (int index = 0 ; index < (LCD_X * LCD_Y / 8) ; index++)
    LcdWrite(LCD_D, my_array[index]);
}

// Initialize display
Adafruit_PCD8544 display = Adafruit_PCD8544(CLK, DIN, DC, CE, RST);

File root;
String files[10]; // Store up to 10 file names
int fileCount = 0;
int currentFileIndex = 0;
int currentLineIndex = 0;
String fileLines[20]; // Store up to 20 lines per file
int lineCount = 0;
bool viewingFile = false;
unsigned long lastButtonPress = 0;

void setup() {
    Serial.begin(115200);
    pinMode(BTN_UP, INPUT_PULLUP);
    pinMode(BTN_DOWN, INPUT_PULLUP);
    pinMode(BTN_SELECT, INPUT_PULLUP);
    pinMode(BTN_BACK, INPUT_PULLUP);
    
    // Initialize display
    display.begin();
    display.setContrast(60);
    display.clearDisplay();
    display.display();
    
    // Initialize HSPI for SD card
    hspi.begin(HSPI_CLK, HSPI_MISO, HSPI_MOSI, HSPI_CS);
    while (!SD.begin(HSPI_CS, hspi)) {
        Serial.println("SD card initialization failed!");
        LcdBitmap(nosd1);
        delay(500);
        LcdBitmap(nosd2);
        delay(500);
        LcdBitmap(nosd3);
        delay(500);
        LcdBitmap(nosd4);
        delay(500);
        LcdBitmap(nosd5);
        delay(500);
        LcdBitmap(nosd6);
        
        return;
    }
    Serial.println("SD card initialized.");
    loadFiles();
}

void loop() {
    if (viewingFile) {
        handleFileView();
    } else {
        handleFileSelection();
    }
}

void loadFiles() {
    root = SD.open("/");
    fileCount = 0;
    while (true) {
        File entry = root.openNextFile();
        if (!entry) break;
        if (!entry.isDirectory() && fileCount < 10) {
            files[fileCount] = String(entry.name());
            Serial.println("Found: " + files[fileCount]);
            fileCount++;
        }
        entry.close();
    }
    root.close();
}

void handleFileSelection() {
    if (debounceButton(BTN_UP)) {
        currentFileIndex = (currentFileIndex > 0) ? currentFileIndex - 1 : fileCount - 1;
    } else if (debounceButton(BTN_DOWN)) {
        currentFileIndex = (currentFileIndex < fileCount - 1) ? currentFileIndex + 1 : 0;
    } else if (debounceButton(BTN_SELECT)) {
        openFile(files[currentFileIndex]);
        viewingFile = true;
    }
    displayMenu();
}

void displayMenu() {
    display.clearDisplay();
    display.setCursor(0, 0);
    display.setTextSize(1);
    display.println("Select File:");
    for (int i = 0; i < fileCount; i++) {
        if (i == currentFileIndex) {
            display.fillRect(0, display.getCursorY(), 84, 8, BLACK);
            display.setTextColor(WHITE, BLACK);
        } else {
            display.setTextColor(BLACK, WHITE);
        }
        display.println(files[i]);
    }
    display.setTextColor(BLACK, WHITE);
    display.display();
}

void openFile(String filename) {
    File file = SD.open("/" + filename);
    if (!file) {
        
        LcdBitmap(nofiles);
        return;
    }
    Serial.println("Opening file: " + filename);
    lineCount = 0;
    while (file.available() && lineCount < 20) {
        fileLines[lineCount] = file.readStringUntil('\n');
        Serial.println(fileLines[lineCount]);
        lineCount++;
    }
    file.close();
    currentLineIndex = 0;
}

void handleFileView() {
    if (debounceButton(BTN_UP)) {
        currentLineIndex = (currentLineIndex > 0) ? currentLineIndex - 1 : lineCount - 1;
    } else if (debounceButton(BTN_DOWN)) {
        currentLineIndex = (currentLineIndex < lineCount - 1) ? currentLineIndex + 1 : 0;
    } else if (debounceButton(BTN_BACK)) {
        viewingFile = false;
    }
    displayFileContent();
}

void displayFileContent() {
    display.clearDisplay();
    display.setCursor(0, 0);
    display.setTextSize(1);
    display.println("File Content:");
    for (int i = 0; i < 5; i++) {
        int index = currentLineIndex + i;
        if (index < lineCount) {
            if (i == 0) {
                display.fillRect(0, display.getCursorY(), 84, 8, BLACK);
                display.setTextColor(WHITE, BLACK);
            } else {
                display.setTextColor(BLACK, WHITE);
            }
            display.println(fileLines[index]);
        }
    }
    display.setTextColor(BLACK, WHITE);
    display.display();
}

void displayMessage(String msg) {
    display.clearDisplay();
    display.setCursor(10, 20);
    display.setTextSize(2);
    display.println(msg);
    display.display();
    delay(1000);
}

bool debounceButton(int buttonPin) {
    if (digitalRead(buttonPin) == LOW && (millis() - lastButtonPress) > 200) {
        lastButtonPress = millis();
        return true;
    }
    return false;
}
